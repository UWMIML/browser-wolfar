{"id":"index.html","dependencies":[{"name":"/Users/silverdust/Projects/Research/IML/browser-wolfar/package.json","includedInParent":true,"mtime":1534279667446},{"name":"./node_modules/ar.js/three.js/build/ar.js","dynamic":true,"parent":"/Users/silverdust/Projects/Research/IML/browser-wolfar/index.html","resolved":"/Users/silverdust/Projects/Research/IML/browser-wolfar/node_modules/ar.js/three.js/build/ar.js"}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Wolf AR</title>\n  <style>\n    body{\n      margin: 0;\n      background: #aaa;\n    }\n  </style>\n</head>\n<body>\n  <script src=\"https://unpkg.com/three@0.95.0/build/three.js\"></script>\n  <script src=\"/3ff116d4714e2b3e2fdab4c85e13f41d.js\"></script>\n  <script>\n    (function(){\n      const renderer = new THREE.WebGLRenderer({ antialia: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.shadowMap.enabled = true;\n      document.body.appendChild(renderer.domElement);\n\n      // Scene setup\n      const scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xaaaaaa);\n\n      // Add light to scene\n      const hemlight = new THREE.HemisphereLight(0xfff0f0, 0x606066, 0.5);\n      hemlight.position.set(10, 10, 10);\n      scene.add(hemlight);\n\n      // Add Camera\n      const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 40;\n\n      // Build Mesh\n      const geometry = new THREE.BoxGeometry(10, 10, 10);\n      const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n      const cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n\n      const arToolkitSource = new THREEx.ArToolkitSource({\n        sourceType: 'webcam'\n      });\n      arToolkitSource.init(function onReady() {\n        onResize();\n      });\n\n      animate();\n\n      const arToolkitContext = new THREEx.ArToolkitContext({\n        cameraParametersUrl: 'assets/camera_para.dat',\n        detectionMode: 'mono'\n      });\n      arToolkitContext.init(function onCompleted(){\n        camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());\n      });\n\n      const markerControls = new THREEx.ArMarkerControls(arToolkitContext, camera, {\n        type: 'pattern',\n        patternUrl: 'assets/patt.hiro',\n        changeMatrixMode: 'cameraTransformMatrix'\n      });\n      scene.visible = false;\n\n      function onResize() {\n        arToolkitSource.onResize();\n        arToolkitSource.copyElementSizeTo(renderer.domElement);\n        if(arToolkitContext.arController) {\n          arToolkitSource.copyElementSizeTo(arToolkitContext.arController.canvas);\n        }\n      }\n\n      function render() {\n        cube.rotation.y += 0.01;\n        if(arToolkitSource.ready) {\n          arToolkitContext.update(arToolkitSource.domElement);\n          scene.visible = camera.visible;\n        }\n        renderer.render(scene, camera);\n      }\n\n      function animate() {\n        renderer.setAnimationLoop(render);\n      }\n    })();\n  </script>\n</body>\n</html>\n"},"hash":"17e4ea3a3d91074140e27ea1d8ca7420","cacheData":{}}